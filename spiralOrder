class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& mat) {
        
        // code here
        int m = mat.size();
        int n = mat[0].size();
        
        int dir = 0;
        
        /* dir =0: left to right
        dir =1: top to down
        dir = 2: right to left;
        dir = 3: down to top;
        */
        int top =0;
        int left = 0;
        int right = n-1;
        int down = m-1;
        
        vector<int>result;
        
        while(top<=down && left<=right){
            if(dir == 0){
                for(int i =left ;i<=right;i++){
                    result.push_back(mat[top][i]);
                }
                top++;
                
            }
            if(dir == 1){
                //top to down
                //constant :coloumn (right)
                for(int i = top; i<=down ; i++){
                    result.push_back(mat[i][right]);
                }
                right--;
                
            }
            
            if(dir == 2){
                for(int i = right ; i>=left; i--){
                    result.push_back(mat[down][i]);
                }
                down--;
            }
            
            if(dir == 3){
                for(int i = down; i>=top; i--){
                    result.push_back(mat[i][left]);
                }
                left++;
            }
            dir++;
            if(dir == 4){
                dir = 0;
            }
        }
        return result;
    
        
    }
};
